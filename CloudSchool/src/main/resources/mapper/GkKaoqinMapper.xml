<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.CloudSchool.dao.GkKaoqinMapper">
  <resultMap id="BaseResultMap" type="com.CloudSchool.domain.GkKaoqin" >
    <id column="kq_id" jdbcType="INTEGER" property="kqId" />
    <result column="uid" jdbcType="INTEGER" property="uid" />
    <result column="kq_time" jdbcType="TIMESTAMP" property="kqTime" />
    <result column="kq_state_id" jdbcType="INTEGER" property="kqStateId" />
    <result column="creation_time" jdbcType="TIMESTAMP" property="creationTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="founder" jdbcType="VARCHAR" property="founder" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="by1" jdbcType="VARCHAR" property="by1" />
    <result column="by2" jdbcType="VARCHAR" property="by2" />
    <result column="by3" jdbcType="VARCHAR" property="by3" />
    <result column="by4" jdbcType="VARCHAR" property="by4" />
    <result column="by5" jdbcType="VARCHAR" property="by5" />
  </resultMap>
  
  
  <!-- 查询某段时间内的考勤状况by userid -->
  <select id="queryKaoQinYuanGongXiangByTime" resultMap="BaseResultMap">
  	SELECT * FROM `gk_kaoqin`
  	<where>
		and `uid` = #{userid} AND kq_state_id != 1
		<if test="startStr and endStr">
			AND kq_time BETWEEN  #{startStr} AND #{endStr}
		</if>
		<if test="startStr and !endStr">
			AND kq_time BETWEEN  #{startStr} AND NOW()
		</if>
		<if test="!startStr and endStr">
			AND kq_time &lt;= #{endStr}
		</if>
	</where>
  </select>

  <!-- 修改班级当天考勤状态 -->
  <update id="updateKaoQinBanJi">
	UPDATE `gk_kaoqin`
	<set>
		`kq_state_id` = #{kqStateId}
	</set>
	WHERE `uid` = #{uid} AND DATE(`kq_time`) = DATE(NOW())
  </update>
  <!-- 判断班级当天是否考勤 -->
  <select id="queryKaoQinPanDuan" resultMap="BaseResultMap">
  	SELECT * FROM `gk_kaoqin`
	WHERE uid = #{userid} AND DATE(`kq_time`) = DATE(NOW())
  </select>
  <!-- 新增班级当天考勤 -->
  <insert id="insertBanJiKaoQin">
		INSERT INTO `gk_kaoqin`
		(`uid`,`kq_time`,`kq_state_id`,`creation_time`,`status`,`by1`,`by2`)VALUES
		<foreach collection="list" close=";"  separator="," item="l">
			(#{l.uid},NOW(),#{l.kqStateId},NOW(),0,0,0)
		</foreach>
  </insert>
  
  
  
  
  
  
  
  
  
	<!-- 查询班级考勤 -->
	<select id="queryAllKaoQinBanJi" resultMap="BaseResultMap">
		SELECT 
		*
		FROM `cqj_user` AS u
		JOIN `cqj_student` AS xs ON (xs.studentid = u.usertypeid) AND u.`usertypenub` = 1
		JOIN `clazzstudent` AS cs ON (xs.`studentid` = cs.sid)
		RIGHT JOIN 
		(SELECT uid, SUM(IF(kq_state_id=1, 1, 0)) yi,
		SUM(IF(kq_state_id=2, 1, 0)) er, 
		SUM(IF(kq_state_id=3, 1, 0)) san, 
		SUM(IF(kq_state_id=4, 1, 0)) si, 
		SUM(IF(kq_state_id=5, 1, 0)) wu
		FROM `gk_kaoqin` AS kq 
			<if test="startStr==null and endStr==null">
				GROUP BY kq.uid
			</if>
		<where>
			<if test="startStr!=null and endStr!=null">
				AND kq_time BETWEEN  #{startStr} AND #{endStr} GROUP BY kq.uid
			</if>
			<if test="startStr!=null and endStr==null">
				AND kq_time BETWEEN  #{startStr} AND NOW() GROUP BY kq.uid
			</if>
			<if test="startStr==null and endStr!=null">
				AND kq_time &lt;= #{endStr} GROUP BY kq.uid
			</if>
		</where>
		) kq ON (u.userid = kq.uid) 
		<where>
			<if test="cid">
				AND cs.`cid` = #{cid} 
			</if>
		</where>
		<where>
			<if test="studentname">
				AND cs.sid IN (
					SELECT studentid FROM `cqj_student` WHERE `studentname` LIKE concat('%',#{studentname},'%')
					) AND cs.`status` = 0
			</if>
		</where>
		LIMIT #{currentPage},#{pageSize}
	</select>
	<!-- 查询班级考勤行数 -->
	<select id="queryAllKaoQinBanJiCount" resultType="int">
		SELECT 
		COUNT(*)
		FROM `cqj_user` AS u
		JOIN `cqj_student` AS xs ON (xs.studentid = u.usertypeid) AND u.`usertypenub` = 1
		JOIN `clazzstudent` AS cs ON (xs.`studentid` = cs.sid)
		RIGHT JOIN 
		(SELECT uid, SUM(IF(kq_state_id=1, 1, 0)) yi,
		SUM(IF(kq_state_id=2, 1, 0)) er, 
		SUM(IF(kq_state_id=3, 1, 0)) san, 
		SUM(IF(kq_state_id=4, 1, 0)) si, 
		SUM(IF(kq_state_id=5, 1, 0)) wu
		FROM `gk_kaoqin` AS kq 
			<if test="startStr==null and endStr==null">
				GROUP BY kq.uid
			</if>
		<where>
			<if test="startStr!=null and endStr!=null">
				AND kq_time BETWEEN  #{startStr} AND #{endStr} GROUP BY kq.uid
			</if>
			<if test="startStr!=null and endStr==null">
				AND kq_time BETWEEN  #{startStr} AND NOW() GROUP BY kq.uid
			</if>
			<if test="startStr==null and endStr!=null">
				AND kq_time &lt;= #{endStr} GROUP BY kq.uid
			</if>
		</where>
		) kq ON (u.userid = kq.uid) 
		<where>
			<if test="cid">
				AND cs.`cid` = #{cid} 
			</if>
		</where>
		
		AND cs.sid IN (
		SELECT studentid FROM `cqj_student` WHERE `studentname` LIKE concat('%',#{studentname},'%')
		) AND cs.`status` = 0
	</select>
	
	
	
	
	
	
	

  <!-- 查询所有员工考勤 -->
  <select id="queryAllKaoQinYuanGong" resultMap="BaseResultMap">
	  SELECT zw.`positionname`,yg.`staffname`,u.*, kq.*
	FROM `cqj_user` AS u
	JOIN `cqj_staff` AS yg ON (yg.staffid = u.usertypeid) AND u.`usertypenub` = 0
	JOIN `cqj_position` AS zw ON (zw.`positionid` = yg.`positionid`)
	RIGHT JOIN 
	(
	SELECT uid, SUM(IF(kq_state_id=1, 1, 0)) yi,
	SUM(IF(kq_state_id=2, 1, 0)) er, 
	SUM(IF(kq_state_id=3, 1, 0)) san, 
	SUM(IF(kq_state_id=4, 1, 0)) si, 
	SUM(IF(kq_state_id=5, 1, 0)) wu
	FROM `gk_kaoqin` AS kq 
		<if test="startStr==null and endStr==null">
			GROUP BY kq.uid
		</if>
	<where>
		<if test="startStr!=null and endStr!=null">
			AND kq_time BETWEEN  #{startStr} AND #{endStr} GROUP BY kq.uid
		</if>
		<if test="startStr!=null and endStr==null">
			AND kq_time BETWEEN  #{startStr} AND NOW() GROUP BY kq.uid
		</if>
		<if test="startStr==null and endStr!=null">
			AND kq_time &lt;= #{endStr} GROUP BY kq.uid
		</if>
	</where>
	) kq ON (u.userid = kq.uid) 
	<where>
		<if test="positionname!=null">
			AND zw.`positionname` LIKE concat('%',#{positionname},'%')
		</if>
		<if test="staffname!=null">
			AND yg.`staffname` LIKE concat('%',#{staffname},'%')
		</if>
	</where>
	LIMIT #{currentPage},#{pageSize}
  </select>
  <!-- 查询所有员工考勤行数 -->
  <select id="queryAllKaoQinYuanGongCount" resultType="int">
  	SELECT COUNT(*)
	FROM `cqj_user` AS u
	JOIN `cqj_staff` AS yg ON (yg.staffid = u.usertypeid) AND u.`usertypenub` = 0
	JOIN `cqj_position` AS zw ON (zw.`positionid` = yg.`positionid`)
	RIGHT JOIN 
	(
	SELECT uid, SUM(IF(kq_state_id=1, 1, 0)) yi,
	SUM(IF(kq_state_id=2, 1, 0)) er, 
	SUM(IF(kq_state_id=3, 1, 0)) san, 
	SUM(IF(kq_state_id=4, 1, 0)) si, 
	SUM(IF(kq_state_id=5, 1, 0)) wu
	FROM `gk_kaoqin` AS kq 
		<if test="startStr==null and endStr==null">
			GROUP BY kq.uid
		</if>
	<where>
		<if test="startStr!=null and endStr!=null">
			AND kq_time BETWEEN  #{startStr} AND #{endStr} GROUP BY kq.uid
		</if>
		<if test="startStr!=null and endStr==null">
			AND kq_time BETWEEN  #{startStr} AND NOW() GROUP BY kq.uid
		</if>
		<if test="startStr==null and endStr!=null">
			AND kq_time &lt;= #{endStr} GROUP BY kq.uid
		</if>
	</where>
	) kq ON (u.userid = kq.uid) 
	<where>
		<if test="positionname!=null">
			AND zw.`positionname` LIKE concat('%',#{positionname},'%')
		</if>
		<if test="staffname!=null">
			AND yg.`staffname` LIKE concat('%',#{staffname},'%')
		</if>
	</where>
  </select>
  
  
  
  
  
  <sql id="Base_Column_List">
    kq_id, uid, kq_time, kq_state_id, creation_time, update_time, founder, status, by1, 
    by2, by3, by4, by5
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from gk_kaoqin
    where kq_id = #{kqId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from gk_kaoqin
    where kq_id = #{kqId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.CloudSchool.domain.GkKaoqin">
    insert into gk_kaoqin (kq_id, uid, kq_time, 
      kq_state_id, creation_time, update_time, 
      founder, status, by1, 
      by2, by3, by4, by5
      )
    values (#{kqId,jdbcType=INTEGER}, #{uid,jdbcType=INTEGER}, #{kqTime,jdbcType=TIMESTAMP}, 
      #{kqStateId,jdbcType=INTEGER}, #{creationTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{founder,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, #{by1,jdbcType=VARCHAR}, 
      #{by2,jdbcType=VARCHAR}, #{by3,jdbcType=VARCHAR}, #{by4,jdbcType=VARCHAR}, #{by5,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.CloudSchool.domain.GkKaoqin">
    insert into gk_kaoqin
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="kqId != null">
        kq_id,
      </if>
      <if test="uid != null">
        uid,
      </if>
      <if test="kqTime != null">
        kq_time,
      </if>
      <if test="kqStateId != null">
        kq_state_id,
      </if>
      <if test="creationTime != null">
        creation_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="founder != null">
        founder,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="by1 != null">
        by1,
      </if>
      <if test="by2 != null">
        by2,
      </if>
      <if test="by3 != null">
        by3,
      </if>
      <if test="by4 != null">
        by4,
      </if>
      <if test="by5 != null">
        by5,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="kqId != null">
        #{kqId,jdbcType=INTEGER},
      </if>
      <if test="uid != null">
        #{uid,jdbcType=INTEGER},
      </if>
      <if test="kqTime != null">
        #{kqTime,jdbcType=TIMESTAMP},
      </if>
      <if test="kqStateId != null">
        #{kqStateId,jdbcType=INTEGER},
      </if>
      <if test="creationTime != null">
        #{creationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="founder != null">
        #{founder,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="by1 != null">
        #{by1,jdbcType=VARCHAR},
      </if>
      <if test="by2 != null">
        #{by2,jdbcType=VARCHAR},
      </if>
      <if test="by3 != null">
        #{by3,jdbcType=VARCHAR},
      </if>
      <if test="by4 != null">
        #{by4,jdbcType=VARCHAR},
      </if>
      <if test="by5 != null">
        #{by5,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.CloudSchool.domain.GkKaoqin">
    update gk_kaoqin
    <set>
      <if test="uid != null">
        uid = #{uid,jdbcType=INTEGER},
      </if>
      <if test="kqTime != null">
        kq_time = #{kqTime,jdbcType=TIMESTAMP},
      </if>
      <if test="kqStateId != null">
        kq_state_id = #{kqStateId,jdbcType=INTEGER},
      </if>
      <if test="creationTime != null">
        creation_time = #{creationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="founder != null">
        founder = #{founder,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="by1 != null">
        by1 = #{by1,jdbcType=VARCHAR},
      </if>
      <if test="by2 != null">
        by2 = #{by2,jdbcType=VARCHAR},
      </if>
      <if test="by3 != null">
        by3 = #{by3,jdbcType=VARCHAR},
      </if>
      <if test="by4 != null">
        by4 = #{by4,jdbcType=VARCHAR},
      </if>
      <if test="by5 != null">
        by5 = #{by5,jdbcType=VARCHAR},
      </if>
    </set>
    where kq_id = #{kqId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.CloudSchool.domain.GkKaoqin">
    update gk_kaoqin
    set uid = #{uid,jdbcType=INTEGER},
      kq_time = #{kqTime,jdbcType=TIMESTAMP},
      kq_state_id = #{kqStateId,jdbcType=INTEGER},
      creation_time = #{creationTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      founder = #{founder,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      by1 = #{by1,jdbcType=VARCHAR},
      by2 = #{by2,jdbcType=VARCHAR},
      by3 = #{by3,jdbcType=VARCHAR},
      by4 = #{by4,jdbcType=VARCHAR},
      by5 = #{by5,jdbcType=VARCHAR}
    where kq_id = #{kqId,jdbcType=INTEGER}
  </update>
  
  <!-- 学员考勤到勤率 -->
  <select id="querykaoqinRateBygIdAndsId" resultType="double">
  	SELECT IFNULL(SUM(kq_state_id=1)/COUNT(kq_id)*100,0) FROM `gk_kaoqin`
	INNER JOIN `cqj_user` ON `cqj_user`.userid = gk_kaoqin.uid AND cqj_user.usertypenub = 1 #学员类型
	WHERE cqj_user.usertypeid = #{sId}
	<if test="gId!=null">
	AND by2 = #{gId} #年级
	</if>
  </select>
  
  <!-- 教员考情道勤率 -->
  <select id="querykaoqinRateByStaffId" resultType="double">
	SELECT IFNULL(SUM(kq_state_id=1)/COUNT(kq_id)*100,0) FROM `gk_kaoqin`
	INNER JOIN `cqj_user` ON `cqj_user`.userid = gk_kaoqin.uid AND cqj_user.usertypenub = 0 #学员类型
	WHERE cqj_user.usertypeid = #{staffId}
  </select>
</mapper>