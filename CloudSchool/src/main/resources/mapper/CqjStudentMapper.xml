<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.CloudSchool.dao.CqjStudentMapper">
	<resultMap id="BaseResultMap"
		type="com.CloudSchool.domain.CqjStudent">
		<id column="studentid" jdbcType="INTEGER" property="studentid" />
		<result column="studentname" jdbcType="VARCHAR"
			property="studentname" />
		<result column="studentnub" jdbcType="VARCHAR"
			property="studentnub" />
		<result column="positionid" jdbcType="INTEGER"
			property="positionid" />
		<result column="sex" jdbcType="INTEGER" property="sex" />
		<result column="age" jdbcType="INTEGER" property="age" />
		<result column="phone" jdbcType="VARCHAR" property="phone" />
		<result column="idcard" jdbcType="VARCHAR" property="idcard" />
		<result column="birthday" jdbcType="TIMESTAMP"
			property="birthday" />
		<result column="address" jdbcType="VARCHAR" property="address" />
		<result column="email" jdbcType="VARCHAR" property="email" />
		<result column="standby1" jdbcType="VARCHAR"
			property="standby1" />
		<result column="standby2" jdbcType="VARCHAR"
			property="standby2" />
		<result column="standby3" jdbcType="VARCHAR"
			property="standby3" />
		<result column="standby4" jdbcType="VARCHAR"
			property="standby4" />
		<result column="standby5" jdbcType="VARCHAR"
			property="standby5" />
		<result column="className" property="className" />
		<result column="statusValue" property="statusValue" />
		<result column="endtime" property="endtime" />
		<result column="url" property="url" />
		<result column="parentsid" jdbcType="INTEGER"
			property="parentsid" />
	</resultMap>


	<resultMap id="StudentTest"
		type="com.CloudSchool.domain.CqjStudent">
		<id column="sid" jdbcType="INTEGER" property="studentid" />
		<result column="studentname" jdbcType="VARCHAR"
			property="studentname" />
		<result column="standby1" jdbcType="VARCHAR"
			property="standby1" />
		<result column="standby2" jdbcType="VARCHAR"
			property="standby2" />
		<result column="standby3" jdbcType="VARCHAR"
			property="standby3" />
		<result column="standby4" jdbcType="VARCHAR"
			property="standby4" />
		<collection property="stList"
			ofType="com.CloudSchool.domain.cqjvo.StudentTestVo" column="sid">
			<result column="testSumScore" property="testSumScore" />
			<result column="testScore" property="testScore" />
			<result column="testname" property="testname" />
			<result column="testTypeName" property="testTypeName" />
			<result column="testid" property="testid" />
			<result column="tc" property="tc" />
			<result column="mid" property="mid" />
		</collection>
	</resultMap>

	<resultMap type="com.CloudSchool.domain.cqjvo.StudentTestVo"
		id="StudentTestVo">
		<result column="testname" property="testname" />
		<result column="testTypeName" property="testTypeName" />
	</resultMap>
	
	<resultMap id="StudentJobMap"
		type="com.CloudSchool.domain.cqjvo.StudentJob">
		<id column="studentid" jdbcType="INTEGER" property="studentid" />
		<result column="studentname" jdbcType="VARCHAR"
			property="studentname" />
		<result column="studentnub" jdbcType="VARCHAR"
			property="studentnub" />
		<result column="phone" jdbcType="VARCHAR" property="phone" />
		<result column="address" jdbcType="VARCHAR" property="address" />
		<result column="email" jdbcType="VARCHAR" property="email" />
		<result column="standby2" jdbcType="VARCHAR"
			property="standby2" />
	</resultMap>
	
	<sql id="Base_Column_List">
		studentid, studentname, studentnub, positionid, sex, age,
		phone, idcard,
		birthday,
		address, email, standby1, standby2, standby3,
		standby4, standby5
	</sql>
	<select id="selectByPrimaryKey"
		parameterType="java.lang.Integer" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from cqj_student
		where studentid = #{studentid,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey"
		parameterType="java.lang.Integer">
		delete from cqj_student
		where studentid =
		#{studentid,jdbcType=INTEGER}
	</delete>
	<insert id="insert"
		parameterType="com.CloudSchool.domain.CqjStudent">
		insert into cqj_student (studentid, studentname,
		studentnub,
		positionid, sex, age,
		phone, idcard, birthday,
		address,
		email, standby1,
		standby2, standby3, standby4,
		standby5)
		values
		(#{studentid,jdbcType=INTEGER}, #{studentname,jdbcType=VARCHAR},
		#{studentnub,jdbcType=VARCHAR},
		#{positionid,jdbcType=INTEGER},
		#{sex,jdbcType=INTEGER}, #{age,jdbcType=INTEGER},
		#{phone,jdbcType=VARCHAR}, #{idcard,jdbcType=VARCHAR},
		#{birthday,jdbcType=TIMESTAMP},
		#{address,jdbcType=VARCHAR},
		#{email,jdbcType=VARCHAR}, #{standby1,jdbcType=VARCHAR},
		#{standby2,jdbcType=VARCHAR}, #{standby3,jdbcType=VARCHAR},
		#{standby4,jdbcType=VARCHAR},
		#{standby5,jdbcType=VARCHAR})
	</insert>
	<insert id="insertSelective"
		parameterType="com.CloudSchool.domain.CqjStudent">
		insert into cqj_student
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="studentid != null">
				studentid,
			</if>
			<if test="studentname != null">
				studentname,
			</if>
			<if test="studentnub != null">
				studentnub,
			</if>
			<if test="positionid != null">
				positionid,
			</if>
			<if test="sex != null">
				sex,
			</if>
			<if test="age != null">
				age,
			</if>
			<if test="phone != null">
				phone,
			</if>
			<if test="idcard != null">
				idcard,
			</if>
			<if test="birthday != null">
				birthday,
			</if>
			<if test="address != null">
				address,
			</if>
			<if test="email != null">
				email,
			</if>
			<if test="standby1 != null">
				standby1,
			</if>
			<if test="standby2 != null">
				standby2,
			</if>
			<if test="standby3 != null">
				standby3,
			</if>
			<if test="standby4 != null">
				standby4,
			</if>
			<if test="standby5 != null">
				standby5,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="studentid != null">
				#{studentid,jdbcType=INTEGER},
			</if>
			<if test="studentname != null">
				#{studentname,jdbcType=VARCHAR},
			</if>
			<if test="studentnub != null">
				#{studentnub,jdbcType=VARCHAR},
			</if>
			<if test="positionid != null">
				#{positionid,jdbcType=INTEGER},
			</if>
			<if test="sex != null">
				#{sex,jdbcType=INTEGER},
			</if>
			<if test="age != null">
				#{age,jdbcType=INTEGER},
			</if>
			<if test="phone != null">
				#{phone,jdbcType=VARCHAR},
			</if>
			<if test="idcard != null">
				#{idcard,jdbcType=VARCHAR},
			</if>
			<if test="birthday != null">
				#{birthday,jdbcType=TIMESTAMP},
			</if>
			<if test="address != null">
				#{address,jdbcType=VARCHAR},
			</if>
			<if test="email != null">
				#{email,jdbcType=VARCHAR},
			</if>
			<if test="standby1 != null">
				#{standby1,jdbcType=VARCHAR},
			</if>
			<if test="standby2 != null">
				#{standby2,jdbcType=VARCHAR},
			</if>
			<if test="standby3 != null">
				#{standby3,jdbcType=VARCHAR},
			</if>
			<if test="standby4 != null">
				#{standby4,jdbcType=VARCHAR},
			</if>
			<if test="standby5 != null">
				#{standby5,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective"
		parameterType="com.CloudSchool.domain.CqjStudent">
		update cqj_student
		<set>
			<if test="studentname != null">
				studentname = #{studentname,jdbcType=VARCHAR},
			</if>
			<if test="studentnub != null">
				studentnub = #{studentnub,jdbcType=VARCHAR},
			</if>
			<if test="positionid != null">
				positionid = #{positionid,jdbcType=INTEGER},
			</if>
			<if test="sex != null">
				sex = #{sex,jdbcType=INTEGER},
			</if>
			<if test="age != null">
				age = #{age,jdbcType=INTEGER},
			</if>
			<if test="phone != null">
				phone = #{phone,jdbcType=VARCHAR},
			</if>
			<if test="idcard != null">
				idcard = #{idcard,jdbcType=VARCHAR},
			</if>
			<if test="birthday != null">
				birthday = #{birthday,jdbcType=TIMESTAMP},
			</if>
			<if test="address != null">
				address = #{address,jdbcType=VARCHAR},
			</if>
			<if test="email != null">
				email = #{email,jdbcType=VARCHAR},
			</if>
			<if test="standby1 != null">
				standby1 = #{standby1,jdbcType=VARCHAR},
			</if>
			<if test="standby2 != null">
				standby2 = #{standby2,jdbcType=VARCHAR},
			</if>
			<if test="standby3 != null">
				standby3 = #{standby3,jdbcType=VARCHAR},
			</if>
			<if test="standby4 != null">
				standby4 = #{standby4,jdbcType=VARCHAR},
			</if>
			<if test="standby5 != null">
				standby5 = #{standby5,jdbcType=VARCHAR},
			</if>
		</set>
		where studentid = #{studentid,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey"
		parameterType="com.CloudSchool.domain.CqjStudent">
		update cqj_student
		set studentname =
		#{studentname,jdbcType=VARCHAR},
		studentnub =
		#{studentnub,jdbcType=VARCHAR},
		positionid =
		#{positionid,jdbcType=INTEGER},
		sex = #{sex,jdbcType=INTEGER},
		age =
		#{age,jdbcType=INTEGER},
		phone = #{phone,jdbcType=VARCHAR},
		idcard =
		#{idcard,jdbcType=VARCHAR},
		birthday = #{birthday,jdbcType=TIMESTAMP},
		address = #{address,jdbcType=VARCHAR},
		email =
		#{email,jdbcType=VARCHAR},
		standby1 = #{standby1,jdbcType=VARCHAR},
		standby2 = #{standby2,jdbcType=VARCHAR},
		standby3 =
		#{standby3,jdbcType=VARCHAR},
		standby4 = #{standby4,jdbcType=VARCHAR},
		standby5 = #{standby5,jdbcType=VARCHAR}
		where studentid =
		#{studentid,jdbcType=INTEGER}
	</update>




	<!-- 查询该学员个人信息 -->
	<select id="queryStudentInfoBySid" resultType="com.CloudSchool.domain.statistics.StudentBaseInfoVO">
		SELECT
		cqj_student.studentid AS studentId,cqj_student.studentnub AS studentNo,cqj_student.`studentname` AS studentName,cqj_student.`sex`,`cqj_student`.`age`AS studentAge,
		cqj_student.`standby1`,IF(ISNULL(img.`url`)=1,'/static/img/defaultStudentImg.png',img.`url`) AS url #standby1 0在读/1毕业 sex性别 0男 1女生
		FROM `cqj_student`
		INNER JOIN `clazzstudent` ON `clazzstudent`.`sid` =
		`cqj_student`.`studentid`
		INNER JOIN `clazz` ON clazz.`id` =
		clazzstudent.`cid`
		INNER JOIN `cqj_user` ON `cqj_user`.`usertypeid` = cqj_student.`studentid` AND `cqj_user`.usertypenub = 1
		LEFT JOIN img ON img.`id` = `cqj_user`.`userid` 
		WHERE
		`cqj_student`.`studentid` = #{sId}
		ORDER BY
		clazzstudent.`starttime` DESC LIMIT 1
	</select>

	<!-- 根据学员id查询个人信息 -->
	<select id="queryBysid" resultMap="BaseResultMap">
		SELECT * FROM `cqj_student`
		WHERE studentid=#{sid}
	</select>

	<insert id="addStudents">
		insert into
		`cqj_student`(studentname,sex,age,phone,idcard,birthday,address,email,standby4)
		values
		<foreach collection="list" item="s" index="index"
			separator=",">
			(
			#{s.studentname},
			#{s.sex},
			#{s.age},
			#{s.phone},
			#{s.idcard},
			#{s.birthday},
			#{s.address},
			#{s.email},
			#{s.standby4}
			)
		</foreach>
	</insert>

	<select id="queryNullParentsId" resultMap="BaseResultMap">
		SELECT
		cs.`studentid`,cs.`standby4`,cp.`phone`,cp.`parentsid` FROM
		cqj_student cs
		LEFT JOIN cqj_parents_student cps ON
		cps.`studentid`=cs.`studentid`
		LEFT JOIN cqj_parents cp ON
		cp.`phone`=cs.`standby4`
		WHERE cps.`parentsid` IS NULL
	</select>
	<!-- 开班-更新学生职位和学号 -->
	<update id="setStudentnubAfterCreateClazz">
		UPDATE cqj_student SET 
		positionid = 4,
		studentnub = case 
		<foreach collection="list" item="item" index ="index">
			when studentid=#{item.studentid} then #{item.studentnub}
		</foreach>
			when studentid not in (${str})
			<!-- <foreach collection="list" item="item" index ="index" open="(" separator="," close=")">
				${item.studentid}
			</foreach>  -->
			then studentnub
		end
		where  studentid in
		<foreach collection="list" item="item" index ="index" open="(" separator="," close=")">
			#{item.studentid}
		</foreach>
	</update>
	<select id="queryStudetnTestByCidAndGid" resultMap="StudentTest">
		SELECT
		cu.`userid`,cs.`studentname`,clstu.`cid`,clstu.`sid`,tg.`score` AS
		testScore,tm.`score` AS testSumScore,tm.`name` testname,tt.`name`
		testTypeName,
		zm.`major_name` AS standby1,tm.`id` AS testid,
		IF(tg.`score`/tm.`score`>0.6,0,1) AS nub,tcount.tc AS tc,tm.id AS `mid`,zm.`mid` AS standby4

		FROM clazzstudent clstu LEFT JOIN `testgrade` tg
		ON clstu.`sid`=tg.`sId`
		LEFT JOIN cqj_student cs
		ON cs.`studentid`=clstu.`sid`
		LEFT JOIN `testinstance` tins
		ON tg.`tid`=tins.`id`
		LEFT JOIN `testmodule` tm
		ON tins.`tId`=tm.`id`
		LEFT JOIN `testtype` tt
		ON tm.`tId`=tt.`id`
		LEFT JOIN `cqj_user` cu
		ON cu.`usertypeid`=clstu.`sid` AND cu.`usertypenub`=1
		LEFT JOIN `gk_wjcs` gw
		ON gw.`uid`=cu.`userid` AND gw.`wjtm_id`=20
		LEFT JOIN (
		SELECT tm.`id`,COUNT(tm.`id`) AS tc,tm.`name`,tg.`sId` FROM `testgrade` tg
		LEFT JOIN
		`testinstance` ti ON
		tg.`tid`=ti.`id`
		LEFT JOIN `testmodule` tm ON
		ti.`tId`=tm.`id`
		LEFT JOIN `testtype` tt ON
		tm.`tId`=tt.`id` AND (tt.`id`=2 OR tt.`id`=3)
		WHERE tg.`sId`=1 AND (tt.`id`=2 OR tt.`id`=3)
		GROUP BY tm.`id`
		) AS tcount
		ON tcount.id=tm.`id`
		LEFT JOIN `participatetestclass` ppc ON
		ppc.`tId`=tins.`id`
		LEFT JOIN `zzy_major` zm
		ON gw.`by1`=zm.`mid`
		LEFT JOIN `clazz` cl
		ON cl.`id`=clstu.`cid`
		WHERE clstu.`status`=0 AND ppc.`cid`=#{cid} AND tm.`user1`=#{gid} AND
		(tt.`id`=2 OR tt.`id`=3)  AND cl.`status`=2

	</select>
	<select id="queryTestByCidAndGid" resultMap="StudentTestVo">
		SELECT
		tm.`id`,tm.`name` testname,tt.`name` testTypeName FROM
		`participatetestclass` ppc
		INNER JOIN `testinstance` ti ON
		ppc.`tId`=ti.`id`
		LEFT JOIN `testmodule` tm ON ti.`tId`=tm.`id`
		LEFT
		JOIN `testtype` tt ON tm.`tId`=tt.`id`
		WHERE ppc.`cId`=#{cid} AND
		tm.`user1`=#{gid} AND (tt.`id`=2 OR tt.`id`=3)
		GROUP BY tm.`id`
		ORDER BY tm.`id`
	</select>
	<select id="queryStudentJob" resultMap="StudentJobMap">
		SELECT
		cs.`studentid`,cs.`studentname`,cs.`studentnub`,cs.`sex`,cs.`phone`,cs.`address`,cs.`email`,sug.`user2` as standby2
		FROM `cqj_student` cs INNER JOIN `studentupgrade` sug ON
		cs.`studentid`=sug.`studentId` AND sug.`tagetgId`=-1 AND sug.`user2`=0
	</select>
	  <!-- gk通过学生id查询所在班级所有学生 -->
  <select id="queryTongXueByUserid" resultMap="BaseResultMap">
	SELECT *,c.cname AS 'className',u.userid FROM `cqj_student` AS s
	JOIN `clazzstudent` AS z ON (s.studentid = z.sid) AND `status`= 0
	JOIN `clazz` AS c ON (c.id = z.cid)
	JOIN `cqj_user` AS u ON (u.usertypeid = s.studentid) AND `usertypenub` = 1
	WHERE `studentid` IN (SELECT `sid` FROM `clazzstudent` 
	WHERE `cid` = (SELECT `cid` FROM `clazzstudent` WHERE `sid` = #{uid} AND `status` = 0))
  </select>
  <resultMap type="com.CloudSchool.domain.StudentVO" id="StudentVO" extends="BaseResultMap">
  	<result property="cid" column="cid"/>
  	<result property="cname" column="cname"/>
  	<result property="tagetgId" column="tagetgId"/>
  	<result property="tagetgName" column="tagetgName"/>
  	<result property="gid" column="gid"/>
  	<result property="gname" column="gname"/>
  	<result property="mid" column="mid"/>
  	<result property="mname" column="mname"/>
  	<result property="vid" column="vid"/>
  	<result property="vname" column="vname"/>
  	<result property="ctype" column="ctype"/>
  </resultMap>
  <!-- 查询开班学生来源-新生、游离、升学 -tzx -->
  <select id="queryStudentForCreateClazz" resultMap="StudentVO">
	SELECT cqj_student.*,clazzstudent.cid,clazz.cname,`studentupgrade`.`currentgId` AS gid,zzy_grade.grade_name AS gname,`studentupgrade`.`user1` AS `mid`,zzy_major.major_name AS mname,zzy_grade.vid,zzy_version.versionof AS vname,`studentupgrade`.`tagetgId`,grade.grade_name AS tagetgName,'2' as ctype FROM `studentupgrade`
	INNER JOIN cqj_student ON cqj_student.studentid=`studentupgrade`.`studentId`
	INNER JOIN clazzstudent ON clazzstudent.sid=cqj_student.studentid 
	INNER JOIN clazz ON clazz.id=clazzstudent.cid
	INNER JOIN (
		SELECT clazzstudent.sid,MAX(clazzstudent.starttime) AS starttime FROM clazzstudent
		GROUP BY clazzstudent.sid
	) AS b ON b.sid=clazzstudent.sid AND b.starttime=clazzstudent.starttime
	INNER JOIN zzy_grade ON zzy_grade.gid=clazz.gid
	INNER JOIN (
		SELECT * FROM zzy_grade
	) AS grade ON grade.gid=studentupgrade.`tagetgId`
	LEFT JOIN zzy_major ON zzy_major.mid=`studentupgrade`.`user1`
	INNER JOIN zzy_version ON zzy_version.vid=grade.vid
	WHERE studentupgrade.`tagetgId` &lt;&gt; -1 AND studentupgrade.`status`=0
	UNION ALL 
	SELECT cqj_student.*,clazzstudent.cid,clazz.cname,zzy_grade.gid,zzy_grade.grade_name AS gname,clazz.mid,zzy_major.major_name AS mname,zzy_grade.vid,zzy_version.versionof AS vname,NULL AS `tagetgId`,NULL AS tagetgName,'1' as ctype FROM clazzstudent
	INNER JOIN clazz ON clazz.id=clazzstudent.cid
	INNER JOIN cqj_student ON cqj_student.studentid=clazzstudent.sid
	INNER JOIN (
		SELECT clazzstudent.sid,MAX(clazzstudent.starttime) AS starttime FROM clazzstudent
		GROUP BY clazzstudent.sid
	) AS b ON b.sid=clazzstudent.sid AND b.starttime=clazzstudent.starttime
	INNER JOIN zzy_grade ON zzy_grade.gid=clazz.gid
	LEFT JOIN zzy_major ON zzy_major.mid=clazz.mid
	INNER JOIN zzy_version ON zzy_version.vid=zzy_grade.vid
	WHERE clazzstudent.status=3
	UNION ALL
	SELECT *,NULL AS cid,NULL AS cname,NULL AS gid,NULL AS gname,NULL AS `mid`,NULL AS mname,NULL AS vid,NULL AS vname,NULL AS `tagetgId`,NULL AS tagetgName,'0' as ctype FROM `cqj_student` WHERE standby1=0 AND studentnub IS NULL
  </select>
  <update id="setupgradeSuccess">
  	update studentupgrade set `status`=1 where studentId in 
	<foreach collection="array" item="item" index ="index" open="(" separator="," close=")">
		#{item}
	</foreach>
  </update>
  
  
  <!-- 根据学员id修改学员的个人信息 张泽洋 -->
  <update id="updateBystudentid">
  		update cqj_student set `phone`=#{phone},`address`=#{address},`email`=#{email} where `studentid`=#{studentid}
  </update>
  
</mapper>