<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.CloudSchool.dao.ParticipateteststuMapper">
	<resultMap id="BaseResultMap"
		type="com.CloudSchool.domain.Participateteststu">
		<id column="id" jdbcType="INTEGER" property="id" />
		<result column="tId" jdbcType="INTEGER" property="tid" />
		<result column="sId" jdbcType="INTEGER" property="sid" />
		<result column="time" jdbcType="TIMESTAMP" property="time" />
		<result column="status" jdbcType="INTEGER" property="status" />
		<result column="user1" jdbcType="VARCHAR" property="user1" />
		<result column="user2" jdbcType="VARCHAR" property="user2" />
		<result column="user3" jdbcType="VARCHAR" property="user3" />
		<result column="user4" jdbcType="VARCHAR" property="user4" />
		<result column="user5" jdbcType="VARCHAR" property="user5" />
	</resultMap>
	<sql id="Base_Column_List">
		id, tId, sId, time, status, user1, user2, user3, user4,
		user5
	</sql>
	<select id="selectByPrimaryKey"
		parameterType="java.lang.Integer" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from participateTestStu
		where id = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey"
		parameterType="java.lang.Integer">
		delete from participateTestStu
		where id =
		#{id,jdbcType=INTEGER}
	</delete>
	<insert id="insert"
		parameterType="com.CloudSchool.domain.Participateteststu">
		insert into participateTestStu (id, tId, sId,
		time,
		status, user1,
		user2, user3, user4,
		user5)
		values
		(#{id,jdbcType=INTEGER}, #{tid,jdbcType=INTEGER},
		#{sid,jdbcType=INTEGER},
		#{time,jdbcType=TIMESTAMP},
		#{status,jdbcType=INTEGER}, #{user1,jdbcType=VARCHAR},
		#{user2,jdbcType=VARCHAR}, #{user3,jdbcType=VARCHAR},
		#{user4,jdbcType=VARCHAR},
		#{user5,jdbcType=VARCHAR})
	</insert>
	<insert id="insertSelective"
		parameterType="com.CloudSchool.domain.Participateteststu">
		insert into participateTestStu
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="tid != null">
				tId,
			</if>
			<if test="sid != null">
				sId,
			</if>
			<if test="time != null">
				time,
			</if>
			<if test="status != null">
				status,
			</if>
			<if test="user1 != null">
				user1,
			</if>
			<if test="user2 != null">
				user2,
			</if>
			<if test="user3 != null">
				user3,
			</if>
			<if test="user4 != null">
				user4,
			</if>
			<if test="user5 != null">
				user5,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="tid != null">
				#{tid,jdbcType=INTEGER},
			</if>
			<if test="sid != null">
				#{sid,jdbcType=INTEGER},
			</if>
			<if test="time != null">
				#{time,jdbcType=TIMESTAMP},
			</if>
			<if test="status != null">
				#{status,jdbcType=INTEGER},
			</if>
			<if test="user1 != null">
				#{user1,jdbcType=VARCHAR},
			</if>
			<if test="user2 != null">
				#{user2,jdbcType=VARCHAR},
			</if>
			<if test="user3 != null">
				#{user3,jdbcType=VARCHAR},
			</if>
			<if test="user4 != null">
				#{user4,jdbcType=VARCHAR},
			</if>
			<if test="user5 != null">
				#{user5,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective"
		parameterType="com.CloudSchool.domain.Participateteststu">
		update participateTestStu
		<set>
			<if test="tid != null">
				tId = #{tid,jdbcType=INTEGER},
			</if>
			<if test="sid != null">
				sId = #{sid,jdbcType=INTEGER},
			</if>
			<if test="time != null">
				time = #{time,jdbcType=TIMESTAMP},
			</if>
			<if test="status != null">
				status = #{status,jdbcType=INTEGER},
			</if>
			<if test="user1 != null">
				user1 = #{user1,jdbcType=VARCHAR},
			</if>
			<if test="user2 != null">
				user2 = #{user2,jdbcType=VARCHAR},
			</if>
			<if test="user3 != null">
				user3 = #{user3,jdbcType=VARCHAR},
			</if>
			<if test="user4 != null">
				user4 = #{user4,jdbcType=VARCHAR},
			</if>
			<if test="user5 != null">
				user5 = #{user5,jdbcType=VARCHAR},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey"
		parameterType="com.CloudSchool.domain.Participateteststu">
		update participateTestStu
		set tId =
		#{tid,jdbcType=INTEGER},
		sId = #{sid,jdbcType=INTEGER},
		time =
		#{time,jdbcType=TIMESTAMP},
		status = #{status,jdbcType=INTEGER},
		user1 =
		#{user1,jdbcType=VARCHAR},
		user2 = #{user2,jdbcType=VARCHAR},
		user3 =
		#{user3,jdbcType=VARCHAR},
		user4 = #{user4,jdbcType=VARCHAR},
		user5 =
		#{user5,jdbcType=VARCHAR}
		where id = #{id,jdbcType=INTEGER}
	</update>

	<insert id="insertList">
		insert into participateteststu (id, tId, sId, time,
		status,user1,user3)
		values
		<foreach collection="stus" item="obj" separator=",">
			(0,#{tid},#{obj},now(),0,#{clazzid},0)
		</foreach>
	</insert>

	<!--根据学生id查询出所有考试 -->
	<select id="queryStuTestAllBySid"
		resultType="com.CloudSchool.domain.zjfvo.StuTestInfo">
		SELECT
		testinstance.`id`,testmodule.`name`,testinstance.`startTime`,testinstance.`endtime`,participateteststu.`user3`
		FROM participateteststu
		INNER JOIN testinstance ON
		participateteststu.`tId`=testinstance.`id`
		INNER JOIN testmodule ON
		testmodule.`id`=testinstance.`tId`
		WHERE
		participateteststu.`sId`=#{sid}
	</select>
	
	<resultMap type="com.CloudSchool.domain.zjfvo.TestInfo" id="queryTestInfoBySidAndTidMap">
		<id column="id" property="id"/>
		<association property="testinstance" javaType="com.CloudSchool.domain.Testinstance">
			<id column="id" property="id"/>
			<result column="time" property="time"/>
		</association>
		<association property="testmodule" javaType="com.CloudSchool.domain.Testmodule">
			<result column="name" property="name"/>
			<result column="sumsocre" property="score"/>
		</association>
		<association property="cqjStaff" javaType="com.CloudSchool.domain.CqjStaff">
			<result column="staffname" property="staffname"/>
		</association>
		<collection property="list" ofType="com.CloudSchool.domain.Testinfo">
			<id column="infoid" property="id"/>
			<result column="user1" property="user1"/>
			<association property="topicWithBLOBs" javaType="com.CloudSchool.domain.TopicWithBLOBs">
				<id column="topicid" property="id"/>
				<result column="topicConten" property="topicconten"/>
				<result column="url" property="url"/>
				<association property="wtrecord" javaType="com.CloudSchool.domain.Wtrecord">
					<result column="sturesult" property="result"/>
				</association>
				<collection property="topicoptionList" ofType="com.CloudSchool.domain.Topicoption">
					<id column="optionid" property="id"/>
					<result column="option" property="option"/>
					<result column="optionConten" property="optionconten"/>
				</collection>
			</association>
		</collection>
	</resultMap>
	<!-- 根据学生id 试卷id查询试卷详情 -->
	<select id="queryTestInfoBySidAndTid" resultMap="queryTestInfoBySidAndTidMap">
		SELECT
		testinstance.`id`,testmodule.`name`,testinstance.`time` ,
		cqj_staff.`staffname`,topic.`id` AS
		topicid,topic.`topicConten`,topic.`url`,topic.`result`,
		topicoption.`id` AS
		optionid,topicoption.`option`,topicoption.`optionConten`,
		wtrecord.`result` AS sturesult,testinfo.`id` AS infoid,testinfo.`user1`,testmodule.`score` AS
		sumsocre,
		(SELECT COUNT(*) FROM testinfo WHERE testinfo.`testId`=testmodule.`id`) AS
		`tcount`
		FROM participateteststu
		INNER JOIN testinstance ON participateteststu.`tId`=testinstance.`id`
		INNER JOIN testmodule ON testmodule.`id`=testinstance.`tId`
		INNER JOIN cqj_staff ON testinstance.`uId`=cqj_staff.`staffid`
		INNER JOIN testinfo ON testmodule.`id`=testinfo.`testId`
		INNER JOIN topic ON topic.`id`=testinfo.`tId`
		LEFT JOIN topicoption ON topic.`id`=topicoption.`tId`
		LEFT JOIN wtrecord ON wtrecord.`tId`=topic.`id`
		WHERE testinstance.`id`=#{id} AND participateteststu.`sId`=#{sid}
		ORDER BY testinfo.`user1` ASC
	</select>
</mapper>