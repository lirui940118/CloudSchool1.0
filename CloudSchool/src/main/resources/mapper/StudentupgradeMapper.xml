<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.CloudSchool.dao.StudentupgradeMapper">
	<resultMap id="BaseResultMap"
		type="com.CloudSchool.domain.Studentupgrade">
		<result column="id" jdbcType="INTEGER" property="id" />
		<result column="studentId" jdbcType="INTEGER"
			property="studentid" />
		<result column="tagetgId" jdbcType="INTEGER"
			property="tagetgid" />
		<result column="currentgId" jdbcType="INTEGER"
			property="currentgid" />
		<result column="isNormal" jdbcType="INTEGER"
			property="isnormal" />
		<result column="time" jdbcType="TIMESTAMP" property="time" />
		<result column="approverId" jdbcType="INTEGER"
			property="approverid" />
		<result column="status" jdbcType="INTEGER" property="status" />
		<result column="user1" jdbcType="VARCHAR" property="user1" />
		<result column="user2" jdbcType="VARCHAR" property="user2" />
		<result column="user3" jdbcType="VARCHAR" property="user3" />
		<result column="user4" jdbcType="VARCHAR" property="user4" />
		<result column="user5" jdbcType="VARCHAR" property="user5" />
	</resultMap>
	<insert id="insert"
		parameterType="com.CloudSchool.domain.Studentupgrade">
		insert into studentupgrade (id, studentId, tagetgId,
		currentgId, isNormal, time,
		approverId, status, user1,
		user2, user3, user4,
		user5)
		values (#{id,jdbcType=INTEGER}, #{studentid,jdbcType=INTEGER},
		#{tagetgid,jdbcType=INTEGER},
		#{currentgid,jdbcType=INTEGER}, #{isnormal,jdbcType=INTEGER}, #{time,jdbcType=TIMESTAMP},
		#{approverid,jdbcType=INTEGER}, #{status,jdbcType=INTEGER},
		#{user1,jdbcType=VARCHAR},
		#{user2,jdbcType=VARCHAR}, #{user3,jdbcType=VARCHAR}, #{user4,jdbcType=VARCHAR},
		#{user5,jdbcType=VARCHAR})
	</insert>
	<insert id="insertSelective"
		parameterType="com.CloudSchool.domain.Studentupgrade">
		insert into studentupgrade
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="studentid != null">
				studentId,
			</if>
			<if test="tagetgid != null">
				tagetgId,
			</if>
			<if test="currentgid != null">
				currentgId,
			</if>
			<if test="isnormal != null">
				isNormal,
			</if>
			<if test="time != null">
				time,
			</if>
			<if test="approverid != null">
				approverId,
			</if>
			<if test="status != null">
				status,
			</if>
			<if test="user1 != null">
				user1,
			</if>
			<if test="user2 != null">
				user2,
			</if>
			<if test="user3 != null">
				user3,
			</if>
			<if test="user4 != null">
				user4,
			</if>
			<if test="user5 != null">
				user5,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="studentid != null">
				#{studentid,jdbcType=INTEGER},
			</if>
			<if test="tagetgid != null">
				#{tagetgid,jdbcType=INTEGER},
			</if>
			<if test="currentgid != null">
				#{currentgid,jdbcType=INTEGER},
			</if>
			<if test="isnormal != null">
				#{isnormal,jdbcType=INTEGER},
			</if>
			<if test="time != null">
				#{time,jdbcType=TIMESTAMP},
			</if>
			<if test="approverid != null">
				#{approverid,jdbcType=INTEGER},
			</if>
			<if test="status != null">
				#{status,jdbcType=INTEGER},
			</if>
			<if test="user1 != null">
				#{user1,jdbcType=VARCHAR},
			</if>
			<if test="user2 != null">
				#{user2,jdbcType=VARCHAR},
			</if>
			<if test="user3 != null">
				#{user3,jdbcType=VARCHAR},
			</if>
			<if test="user4 != null">
				#{user4,jdbcType=VARCHAR},
			</if>
			<if test="user5 != null">
				#{user5,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<insert id="addStudentUpGrades">
		insert into
		`studentupgrade`(studentId,tagetgId,currentgId,isNormal,user1)
		values
		<foreach collection="list" item="s" index="index"
			separator=",">
			(
			#{s.studentid},
			#{s.tagetgid},
			#{s.currentgid},
			#{s.isnormal},
			#{s.user1}
			)
		</foreach>
	</insert>
	<update id="updateStudentUpGrade">
		update `studentupgrade`
		<trim prefix="set" suffixOverrides=",">
			<trim prefix="user2 =case" suffix="end,">
				<foreach collection="list" item="i" index="index">
					<if test="i.standby2!=null">
						when studentid=#{i.studentid} then #{i.standby2}
					</if>
				</foreach>
			</trim>

		</trim>
		where
		<foreach collection="list" separator="or" item="i"
			index="index">
			studentid=#{i.studentid}
		</foreach>
	</update>
	<!-- 升学开班后改状态为1 -->
	<update id="setStatusAfterCreateClazz">
		update `studentupgrade` set status=1 where studentId in 
		<foreach collection="list" item="i" open="(" separator="," close=")">#{i.studentid}</foreach>
	</update>
</mapper>