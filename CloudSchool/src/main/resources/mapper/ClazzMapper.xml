<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.CloudSchool.dao.ClazzMapper">
  <resultMap id="BaseResultMap" type="com.CloudSchool.domain.Clazz">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="cname" jdbcType="VARCHAR" property="cname" />
    <result column="gid" jdbcType="INTEGER" property="gid" />
    <result column="mid" jdbcType="INTEGER" property="mid" />
    <result column="startdate" jdbcType="DATE" property="startdate" />
    <result column="count" jdbcType="INTEGER" property="count" />
    <result column="enddate" jdbcType="DATE" property="enddate" />
    <result column="pc" jdbcType="VARCHAR" property="pc" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="normalCount" jdbcType="INTEGER" property="normalCount" />
  </resultMap>
  <sql id="Base_Column_List">
    id, cname, gid, mid, startdate, count, enddate, pc, status
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from clazz
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from clazz
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" useGeneratedKeys="true" keyProperty="id" parameterType="com.CloudSchool.domain.ClazzInfo">
    insert into clazz (id, cname, gid, 
      mid, startdate, count, 
      enddate, pc, status)
    values (#{id,jdbcType=INTEGER}, #{cname,jdbcType=VARCHAR}, #{gid,jdbcType=INTEGER}, 
      #{mid,jdbcType=INTEGER}, DATE(NOW()), #{count,jdbcType=INTEGER}, 
      #{enddate,jdbcType=DATE}, #{pc,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" useGeneratedKeys="true" keyProperty="id" parameterType="com.CloudSchool.domain.Clazz">
    insert into clazz
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="cname != null">
        cname,
      </if>
      <if test="gid != null">
        gid,
      </if>
      <if test="mid != null">
        mid,
      </if>
      <if test="startdate != null">
        startdate,
      </if>
      <if test="count != null">
        count,
      </if>
      <if test="enddate != null">
        enddate,
      </if>
      <if test="pc != null">
        pc,
      </if>
      <if test="status != null">
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="cname != null">
        #{cname,jdbcType=VARCHAR},
      </if>
      <if test="gid != null">
        #{gid,jdbcType=INTEGER},
      </if>
      <if test="mid != null">
        #{mid,jdbcType=INTEGER},
      </if>
      <if test="startdate != null">
        #{startdate,jdbcType=DATE},
      </if>
      <if test="count != null">
        #{count,jdbcType=INTEGER},
      </if>
      <if test="enddate != null">
        #{enddate,jdbcType=DATE},
      </if>
      <if test="pc != null">
        #{pc,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.CloudSchool.domain.Clazz">
    update clazz
    <set>
      <if test="cname != null">
        cname = #{cname,jdbcType=VARCHAR},
      </if>
      <if test="gid != null">
        gid = #{gid,jdbcType=INTEGER},
      </if>
      <if test="mid != null">
        mid = #{mid,jdbcType=INTEGER},
      </if>
      <if test="startdate != null">
        startdate = #{startdate,jdbcType=DATE},
      </if>
      <if test="count != null">
        count = #{count,jdbcType=INTEGER},
      </if>
      <if test="enddate != null">
        enddate = #{enddate,jdbcType=DATE},
      </if>
      <if test="pc != null">
        pc = #{pc,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.CloudSchool.domain.Clazz">
    update clazz
    set cname = #{cname,jdbcType=VARCHAR},
      gid = #{gid,jdbcType=INTEGER},
      mid = #{mid,jdbcType=INTEGER},
      startdate = #{startdate,jdbcType=DATE},
      count = #{count,jdbcType=INTEGER},
      enddate = #{enddate,jdbcType=DATE},
      pc = #{pc,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <!-- 根据年级id查询所有班级 -->
  <select id="queryBygid" resultMap="BaseResultMap">
		select * from clazz where gid=#{gid};
	</select>
	
	<!-- 一对一查询班级的班主任对象 以及一对多查询班级的教员集合 -->
	<resultMap type="com.CloudSchool.domain.Clazz" id="result" extends="BaseResultMap">
					<association property="master" column="id" javaType="com.CloudSchool.domain.CqjStaff" select="com.CloudSchool.dao.CqjStaffMapper.queryByclazzid"></association>
					<collection property="list" column="id" 
						ofType="com.CloudSchool.domain.Clazzcourseteacher" 
						select="com.CloudSchool.dao.ClazzcourseteacherMapper.queryByclazzid">
					</collection>
	</resultMap>
	
<!-- 根据班级集合查询班级 以及查询班主任对象以及教员集合-->
	<select id="queryListid" resultMap="result">
		select *,(SELECT COUNT(*) FROM `clazzstudent` WHERE `clazzstudent`.`cid`=`clazz`.`id` AND `clazzstudent`.`status`=0) AS normalCount  from clazz where id in (
		<foreach collection="list" item="l" separator=",">
 			#{l}
 		</foreach>
 		)
	</select>
	
	
	<!-- 根据班级id查询班级 以及查询班主任对象以及教员集合-->
	<select id="queryByid" resultMap="result">
		select *,(SELECT COUNT(*) FROM `clazzstudent` WHERE `clazzstudent`.`cid`=`clazz`.`id` AND `clazzstudent`.`status`=0) AS normalCount  from clazz where id=#{id}
	</select>
	

	<!-- 根据班级id查询班级 -->
	<select id="queryZcid" resultMap="BaseResultMap">
		select * from `clazz` where id=#{cid};
	</select>
	
	<!-- 查询班级基础信息(统计lirui) -->
	<select id="queryClazzBaseInfo" resultType="com.CloudSchool.domain.statistics.ClazzBaseInfoVO">
	SELECT `zzy_grade`.`grade_name`AS GradeName, `clazz`.`cname`AS clazzName,zzy_major.`major_name`AS majorName,
	`zzy_course`.`course_name`AS courseName,`cqj_staff`.`staffname`AS staffName,zzy_course.`cid`AS courseId,cqj_staff.`staffid`AS staffId,
	clazzcourseteacher.`isTeacher`, clazzcourseteacher.`isMaster`,clazzcourseteacher.`starttime`AS startTime,clazzcourseteacher.`endtime`AS endTime
	FROM `clazz`
	INNER JOIN `zzy_grade` ON `clazz`.gid = `zzy_grade`.`gid`
	INNER JOIN `zzy_major` ON `zzy_major`.`mid` = `clazz`.`mid` 
	INNER JOIN `clazzcourseteacher` ON `clazzcourseteacher`.`clazzid` = `clazz`.`id`
	LEFT JOIN `zzy_course` ON `zzy_course`.`cid` = clazzcourseteacher.`courseid`
	INNER JOIN `cqj_staff` ON `cqj_staff`.`staffid` = `clazzcourseteacher`.tid
	WHERE clazz.`id` = #{clazzId}
	</select>
	
	<!-- 查询教员所带的班级(统计lirui) -->
	<select id="queryClazzListByStaffId" resultType="com.CloudSchool.domain.statistics.ClazzBaseInfoVO">
		SELECT zzy_grade.`grade_name`AS GradeName,clazz.`id`AS clazzId,clazz.`cname`AS clazzName,zzy_course.`course_name`AS courseName,
		clazzcourseteacher.`status`AS clazzStatus
		FROM `clazz`
		INNER JOIN `clazzcourseteacher` ON clazzcourseteacher.`clazzid` = clazz.`id`#班级
		INNER JOIN `zzy_course` ON zzy_course.`cid` = `clazzcourseteacher`.`courseid`#课程
		INNER JOIN `zzy_grade` ON `zzy_grade`.`gid` = clazz.`gid`#年级
		WHERE clazzcourseteacher.`tid` = #{staffId}
		ORDER BY clazzcourseteacher.starttime DESC 
	</select>
</mapper>