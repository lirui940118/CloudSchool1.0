<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.CloudSchool.dao.CqjUserMapper">
	<resultMap id="BaseResultMap"
		type="com.CloudSchool.domain.CqjUser">
		<id column="userid" jdbcType="INTEGER" property="userid" />
		<result column="username" jdbcType="VARCHAR"
			property="username" />
		<result column="password" jdbcType="VARCHAR"
			property="password" />
		<result column="roleid" jdbcType="INTEGER" property="roleid" />
		<result column="usertypeid" jdbcType="INTEGER"
			property="usertypeid" />
		<result column="usertypenub" jdbcType="INTEGER"
			property="usertypenub" />
		<result column="creationtime" jdbcType="TIMESTAMP"
			property="creationtime" />
		<result column="modificationtime" jdbcType="TIMESTAMP"
			property="modificationtime" />
		<result column="status" jdbcType="INTEGER" property="status" />
		<result column="uid" jdbcType="INTEGER" property="uid" />
		<result column="remark" jdbcType="VARCHAR" property="remark" />
		<result column="standby1" jdbcType="VARCHAR"
			property="standby1" />
		<result column="standby2" jdbcType="VARCHAR"
			property="standby2" />
		<result column="standby3" jdbcType="VARCHAR"
			property="standby3" />
		<result column="standby4" jdbcType="VARCHAR"
			property="standby4" />
		<result column="standby5" jdbcType="VARCHAR"
			property="standby5" />
		<result column="url" jdbcType="VARCHAR" property="url" />
		<result column="name" jdbcType="VARCHAR" property="name" />
		<result column="rolename" jdbcType="VARCHAR"
			property="rolename" />
		<result column="positionname" jdbcType="VARCHAR"
			property="positionname" />
		<result column="usernub" jdbcType="VARCHAR" property="usernub" />
		<result column="positionid" jdbcType="INTEGER"
			property="positionid" />
		<result column="sex" jdbcType="INTEGER" property="sex" />
		<result column="age" jdbcType="INTEGER" property="age" />
		<result column="phone" jdbcType="VARCHAR" property="phone" />
		<result column="idcard" jdbcType="VARCHAR" property="idcard" />
		<result column="birthday" jdbcType="VARCHAR"
			property="birthday" />
		<result column="address" jdbcType="VARCHAR" property="address" />
		<result column="email" jdbcType="VARCHAR" property="email" />
		<result column="clazzids" jdbcType="VARCHAR"
			property="clazzids" />
	</resultMap>
	<resultMap type="com.CloudSchool.domain.CqjUser" id="parents" extends="BaseResultMap">
		<collection property="clazzidsList" ofType="string" javaType="list">
			<result column="stuinfo" />
		</collection>
	</resultMap>


	<sql id="Base_Column_List">
		userid, username, password, roleid, usertypeid,
		usertypenub, creationtime,
		modificationtime,
		status, uid, remark,
		standby1, standby2, standby3, standby4, standby5
	</sql>
	<select id="selectByPrimaryKey"
		parameterType="java.lang.Integer" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from cqj_user
		where userid = #{userid,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey"
		parameterType="java.lang.Integer">
		delete from cqj_user
		where userid =
		#{userid,jdbcType=INTEGER}
	</delete>
	<insert id="insert"
		parameterType="com.CloudSchool.domain.CqjUser">
		insert into cqj_user (userid, username, password,
		roleid, usertypeid, usertypenub,
		creationtime, modificationtime,
		status,
		uid, remark, standby1,
		standby2, standby3, standby4,
		standby5)
		values (#{userid,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR},
		#{password,jdbcType=VARCHAR},
		#{roleid,jdbcType=INTEGER},
		#{usertypeid,jdbcType=INTEGER}, #{usertypenub,jdbcType=INTEGER},
		#{creationtime,jdbcType=TIMESTAMP},
		#{modificationtime,jdbcType=TIMESTAMP}, #{status,jdbcType=INTEGER},
		#{uid,jdbcType=INTEGER}, #{remark,jdbcType=VARCHAR},
		#{standby1,jdbcType=VARCHAR},
		#{standby2,jdbcType=VARCHAR},
		#{standby3,jdbcType=VARCHAR}, #{standby4,jdbcType=VARCHAR},
		#{standby5,jdbcType=VARCHAR})
	</insert>
	<insert id="insertSelective"
		parameterType="com.CloudSchool.domain.CqjUser">
		insert into cqj_user
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="userid != null">
				userid,
			</if>
			<if test="username != null">
				username,
			</if>
			<if test="password != null">
				password,
			</if>
			<if test="roleid != null">
				roleid,
			</if>
			<if test="usertypeid != null">
				usertypeid,
			</if>
			<if test="usertypenub != null">
				usertypenub,
			</if>
			<if test="creationtime != null">
				creationtime,
			</if>
			<if test="modificationtime != null">
				modificationtime,
			</if>
			<if test="status != null">
				status,
			</if>
			<if test="uid != null">
				uid,
			</if>
			<if test="remark != null">
				remark,
			</if>
			<if test="standby1 != null">
				standby1,
			</if>
			<if test="standby2 != null">
				standby2,
			</if>
			<if test="standby3 != null">
				standby3,
			</if>
			<if test="standby4 != null">
				standby4,
			</if>
			<if test="standby5 != null">
				standby5,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="userid != null">
				#{userid,jdbcType=INTEGER},
			</if>
			<if test="username != null">
				#{username,jdbcType=VARCHAR},
			</if>
			<if test="password != null">
				#{password,jdbcType=VARCHAR},
			</if>
			<if test="roleid != null">
				#{roleid,jdbcType=INTEGER},
			</if>
			<if test="usertypeid != null">
				#{usertypeid,jdbcType=INTEGER},
			</if>
			<if test="usertypenub != null">
				#{usertypenub,jdbcType=INTEGER},
			</if>
			<if test="creationtime != null">
				#{creationtime,jdbcType=TIMESTAMP},
			</if>
			<if test="modificationtime != null">
				#{modificationtime,jdbcType=TIMESTAMP},
			</if>
			<if test="status != null">
				#{status,jdbcType=INTEGER},
			</if>
			<if test="uid != null">
				#{uid,jdbcType=INTEGER},
			</if>
			<if test="remark != null">
				#{remark,jdbcType=VARCHAR},
			</if>
			<if test="standby1 != null">
				#{standby1,jdbcType=VARCHAR},
			</if>
			<if test="standby2 != null">
				#{standby2,jdbcType=VARCHAR},
			</if>
			<if test="standby3 != null">
				#{standby3,jdbcType=VARCHAR},
			</if>
			<if test="standby4 != null">
				#{standby4,jdbcType=VARCHAR},
			</if>
			<if test="standby5 != null">
				#{standby5,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective"
		parameterType="com.CloudSchool.domain.CqjUser">
		update cqj_user
		<set>
			<if test="username != null">
				username = #{username,jdbcType=VARCHAR},
			</if>
			<if test="password != null">
				password = #{password,jdbcType=VARCHAR},
			</if>
			<if test="roleid != null">
				roleid = #{roleid,jdbcType=INTEGER},
			</if>
			<if test="usertypeid != null">
				usertypeid = #{usertypeid,jdbcType=INTEGER},
			</if>
			<if test="usertypenub != null">
				usertypenub = #{usertypenub,jdbcType=INTEGER},
			</if>
			<if test="creationtime != null">
				creationtime = #{creationtime,jdbcType=TIMESTAMP},
			</if>
			<if test="modificationtime != null">
				modificationtime =
				#{modificationtime,jdbcType=TIMESTAMP},
			</if>
			<if test="status != null">
				status = #{status,jdbcType=INTEGER},
			</if>
			<if test="uid != null">
				uid = #{uid,jdbcType=INTEGER},
			</if>
			<if test="remark != null">
				remark = #{remark,jdbcType=VARCHAR},
			</if>
			<if test="standby1 != null">
				standby1 = #{standby1,jdbcType=VARCHAR},
			</if>
			<if test="standby2 != null">
				standby2 = #{standby2,jdbcType=VARCHAR},
			</if>
			<if test="standby3 != null">
				standby3 = #{standby3,jdbcType=VARCHAR},
			</if>
			<if test="standby4 != null">
				standby4 = #{standby4,jdbcType=VARCHAR},
			</if>
			<if test="standby5 != null">
				standby5 = #{standby5,jdbcType=VARCHAR},
			</if>
		</set>
		where userid = #{userid,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey"
		parameterType="com.CloudSchool.domain.CqjUser">
		update cqj_user
		set username =
		#{username,jdbcType=VARCHAR},
		password = #{password,jdbcType=VARCHAR},
		roleid = #{roleid,jdbcType=INTEGER},
		usertypeid =
		#{usertypeid,jdbcType=INTEGER},
		usertypenub =
		#{usertypenub,jdbcType=INTEGER},
		creationtime =
		#{creationtime,jdbcType=TIMESTAMP},
		modificationtime =
		#{modificationtime,jdbcType=TIMESTAMP},
		status =
		#{status,jdbcType=INTEGER},
		uid = #{uid,jdbcType=INTEGER},
		remark =
		#{remark,jdbcType=VARCHAR},
		standby1 = #{standby1,jdbcType=VARCHAR},
		standby2 = #{standby2,jdbcType=VARCHAR},
		standby3 =
		#{standby3,jdbcType=VARCHAR},
		standby4 = #{standby4,jdbcType=VARCHAR},
		standby5 = #{standby5,jdbcType=VARCHAR}
		where userid =
		#{userid,jdbcType=INTEGER}
	</update>

	<select id="queryClazzByUserId">

	</select>
	<select id="login" resultMap="BaseResultMap">
		SELECT
		cu.`userid`,cu.`roleid`,cu.`usertypeid`,cu.`usertypenub`,cu.`creationtime`,cu.`modificationtime`,cu.`status`,cu.`uid`,cu.`remark`,im.`url`,
		CONCAT_WS('',cs.`studentname`,cst.`staffname`,cp.`parentsname`) AS
		`name`,
		GROUP_CONCAT(CONCAT_WS('',cls1.`cid`,cct.`clazzid`,cls2.`cid`)
		SEPARATOR ',') AS clazzids,
		cr.`rolename`,
		CONCAT_WS('',cs.`studentnub`,cst.`staffnub`) AS usernub,
		CONCAT_WS('',cs.`positionid`,cst.`positionid`,cp.`positionid`) AS
		`positionid`,positionname,
		CONCAT_WS('',cs.`sex`,cst.`sex`,cp.`sex`) AS
		`sex`,
		CONCAT_WS('',cs.`age`,cst.`age`,cp.`age`) AS `age`,
		CONCAT_WS('',cs.`phone`,cst.`phone`,cp.`phone`) AS `phone`,
		CONCAT_WS('',cs.`idcard`,cst.`idcard`,cp.`idcard`) AS `idcard`,
		CONCAT_WS('',cs.`birthday`,cst.`birthday`,cp.`birthday`) AS
		`birthday`,
		CONCAT_WS('',cs.`address`,cst.`address`,cp.`address`) AS
		`address`,
		CONCAT_WS('',cs.`email`,cst.`email`,cp.`email`) AS `email`
		FROM cqj_user cu
		LEFT JOIN cqj_student cs ON
		cu.`usertypeid`=cs.`studentid` AND
		cu.`usertypenub`=1
		LEFT JOIN
		cqj_staff cst ON cu.`usertypeid`=cst.`staffid` AND
		cu.`usertypenub`=0
		LEFT JOIN cqj_parents cp ON cu.`usertypeid`=cp.`parentsid` AND
		cu.`usertypenub`=2
		LEFT JOIN cqj_parents_student cps ON
		cp.`parentsid`=cps.`parentsid` and cps.`status`=0
		LEFT JOIN
		`clazzstudent` cls1 ON
		cls1.`sid`=cs.`studentid` and cls1.`status`=0
		LEFT JOIN `clazzcourseteacher` cct ON
		cct.`tid`=cst.`staffid`
		LEFT JOIN
		(SELECT * FROM `clazzstudent` ) AS
		cls2 ON cps.`studentid`
		=cls2.`sid`
		and cls2.`status`=0
		LEFT JOIN `cqj_position` cpo ON
		cpo.`positionid`=CONCAT_WS('',cs.`positionid`,cst.`positionid`,cp.`positionid`)
		INNER JOIN cqj_role cr ON cr.`roleid`=cu.`roleid`
		LEFT JOIN img im ON
		cu.`userid`=im.`id`
		WHERE
		cu.`username`=#{username} AND
		cu.`password`=#{password}
		GROUP BY
		cu.userid,cpo.positionid,im.imgId
	</select>

	<select id="queryClazzByPositionid"
		resultType="java.lang.String">
		SELECT DISTINCT
		CONCAT_WS(
		'',
		cls1.`cid`,
		cct.`clazzid`,
		cls2.`cid`
		) AS clazzid
		FROM
		cqj_user cu
		LEFT JOIN cqj_student cs
		ON
		cu.`usertypeid` = cs.`studentid`
		AND cu.`usertypenub` = 1
		LEFT JOIN
		cqj_staff cst
		ON cu.`usertypeid` = cst.`staffid`
		AND cu.`usertypenub` =
		0
		LEFT JOIN cqj_parents cp
		ON cu.`usertypeid` = cp.`parentsid`
		AND
		cu.`usertypenub` = 2
		LEFT JOIN cqj_parents_student cps
		ON cp.`parentsid`
		= cps.`parentsid` and cps.`status`=0
		LEFT JOIN `clazzstudent` cls1
		ON
		cls1.`sid` = cs.`studentid`
		LEFT JOIN `clazzcourseteacher` cct
		ON
		cct.`tid` = cst.`staffid`
		LEFT JOIN
		(SELECT
		*
		FROM
		`clazzstudent`) AS cls2
		ON cps.`studentid` = cls2.`sid`
		WHERE CONCAT_WS(
		'',
		cs.`positionid`,
		cst.`positionid`,
		cp.`positionid`
		) IN
		(SELECT
		positionid
		FROM
		(SELECT
		t1.positionid,
		IF(
		FIND_IN_SET(pid, @pids) > 0,
		@pids := CONCAT(@pids,
		',', positionid),
		0
		) AS ischild
		FROM
		(SELECT
		positionid,
		pid
		FROM
		cqj_position t
		WHERE t.status = 0
		ORDER BY pid,
		positionid) t1,
		(SELECT
		@pids := #{positionid}) t2) t3
		WHERE ischild != 0)

	</select>
	<select id="queryByUserId" resultMap="BaseResultMap">
		SELECT
		cu.`userid`,cu.`roleid`,cu.`usertypeid`,cu.`usertypenub`,cu.`creationtime`,cu.`modificationtime`,cu.`status`,cu.`uid`,cu.`remark`,im.`url`,
		CONCAT_WS('',cs.`studentname`,cst.`staffname`,cp.`parentsname`) AS
		`name`,
		GROUP_CONCAT(CONCAT_WS('',cls1.`cid`,cct.`clazzid`,cls2.`cid`)
		SEPARATOR ',') AS clazzids,
		cr.`rolename`,
		CONCAT_WS('',cs.`studentnub`,cst.`staffnub`) AS usernub,
		CONCAT_WS('',cs.`positionid`,cst.`positionid`,cp.`positionid`) AS
		`positionid`,positionname,
		CONCAT_WS('',cs.`sex`,cst.`sex`,cp.`sex`) AS
		`sex`,
		CONCAT_WS('',cs.`age`,cst.`age`,cp.`age`) AS `age`,
		CONCAT_WS('',cs.`phone`,cst.`phone`,cp.`phone`) AS `phone`,
		CONCAT_WS('',cs.`idcard`,cst.`idcard`,cp.`idcard`) AS `idcard`,
		CONCAT_WS('',cs.`birthday`,cst.`birthday`,cp.`birthday`) AS
		`birthday`,
		CONCAT_WS('',cs.`address`,cst.`address`,cp.`address`) AS
		`address`,
		CONCAT_WS('',cs.`email`,cst.`email`,cp.`email`) AS `email`
		FROM cqj_user cu
		LEFT JOIN cqj_student cs ON
		cu.`usertypeid`=cs.`studentid` AND
		cu.`usertypenub`=1
		LEFT JOIN
		cqj_staff cst ON cu.`usertypeid`=cst.`staffid` AND
		cu.`usertypenub`=0
		LEFT JOIN cqj_parents cp ON cu.`usertypeid`=cp.`parentsid` AND
		cu.`usertypenub`=2
		LEFT JOIN cqj_parents_student cps ON
		cp.`parentsid`=cps.`parentsid` AND cps.`status`=0
		LEFT JOIN
		`clazzstudent` cls1 ON
		cls1.`sid`=cs.`studentid` AND cls1.`status`=0
		LEFT JOIN `clazzcourseteacher` cct ON
		cct.`tid`=cst.`staffid`
		LEFT JOIN
		(SELECT * FROM `clazzstudent` ) AS
		cls2 ON cps.`studentid`
		=cls2.`sid`
		AND cls2.`status`=0
		LEFT JOIN `cqj_position` cpo ON
		cpo.`positionid`=CONCAT_WS('',cs.`positionid`,cst.`positionid`,cp.`positionid`)
		INNER JOIN cqj_role cr ON cr.`roleid`=cu.`roleid`
		LEFT JOIN img im ON
		cu.`usertypenub`=im.`style` AND cu.`usertypeid`=im.`id`
		WHERE
		cu.`userid`=#{userid}
		GROUP BY
		cu.userid,cpo.positionid,im.imgId

	</select>

	<select id="pageUser" resultMap="BaseResultMap">
		SELECT
		cr.`rolename`,positionname,CONCAT_WS('',cs.`studentname`,cst.`staffname`,cp.`parentsname`)
		AS
		`name`,CONCAT_WS('',cs.`positionid`,cst.`positionid`,cp.`positionid`)
		AS
		`positionid`,cu.* FROM
		cqj_user cu
		LEFT JOIN cqj_student cs
		ON
		cu.`usertypeid` = cs.`studentid`
		AND cu.`usertypenub` = 1
		LEFT JOIN
		cqj_staff cst
		ON cu.`usertypeid` = cst.`staffid`
		AND cu.`usertypenub` =
		0
		LEFT JOIN cqj_parents cp
		ON cu.`usertypeid` = cp.`parentsid`
		AND
		cu.`usertypenub` = 2
		INNER JOIN cqj_role cr
		ON cu.`roleid`=cr.`roleid`
		LEFT JOIN `cqj_position` cpo ON
		cpo.`positionid`=CONCAT_WS('',cs.`positionid`,cst.`positionid`,cp.`positionid`)
		WHERE cu.`status`=0 and
		(username LIKE
		concat(concat("%",#{filtrate}),"%")
		OR
		CONCAT_WS('',cs.`studentname`,cst.`staffname`,cp.`parentsname`) LIKE
		concat(concat("%",#{filtrate}),"%")
		OR cr.`rolename` LIKE
		CONCAT(CONCAT("%",#{filtrate}),"%")
		OR positionname LIKE
		CONCAT(CONCAT("%",#{filtrate}),"%")
		)
		LIMIT #{cur},#{pageSize}
	</select>
	<select id="queryCunt" resultType="java.lang.Integer">
		SELECT
		COUNT(*) FROM cqj_user
		cu
		LEFT JOIN cqj_student cs
		ON cu.`usertypeid` = cs.`studentid`
		AND
		cu.`usertypenub` = 1
		LEFT JOIN cqj_staff cst
		ON cu.`usertypeid` =
		cst.`staffid`
		AND cu.`usertypenub` = 0
		LEFT JOIN cqj_parents cp
		ON
		cu.`usertypeid` = cp.`parentsid`
		AND cu.`usertypenub` = 2
		INNER JOIN
		cqj_role cr
		ON cu.`roleid`=cr.`roleid`
		LEFT JOIN `cqj_position`
		cpo ON
		cpo.`positionid`=CONCAT_WS('',cs.`positionid`,cst.`positionid`,cp.`positionid`)
		WHERE cu.`status`=0 and
		(username LIKE
		concat(concat("%",#{filtrate}),"%")
		OR
		CONCAT_WS('',cs.`studentname`,cst.`staffname`,cp.`parentsname`) LIKE
		concat(concat("%",#{filtrate}),"%")
		OR cr.`rolename` LIKE
		CONCAT(CONCAT("%",#{filtrate}),"%")
		OR positionname LIKE
		CONCAT(CONCAT("%",#{filtrate}),"%")
		)
	</select>
	<select id="queryStaff" resultMap="BaseResultMap">
		SELECT
		cs.`staffname` AS `name`,cp.`positionname`,cu.`userid`,img.`url`,0 as `usertypenub` FROM
		`cqj_staff` cs
		LEFT JOIN `cqj_position` cp
		ON cs.`positionid`=cp.`positionid`
		LEFT JOIN `cqj_user` cu
		ON cu.`usertypeid`=cs.`staffid`
		LEFT JOIN img ON img.`id`=cu.`userid`
		WHERE cu.`status`=0
	</select>
	
		<select id="queryParents" resultMap="parents">
SELECT u.`userid`,p.`parentsname` as `name`,img.`url`,u.`usertypenub`,CONCAT(IFNULL(cla.`cname`,'无'),"-",s.`studentname`) AS stuinfo FROM cqj_parents p
LEFT JOIN cqj_user u ON p.`parentsid`=u.`usertypeid` AND u.`usertypenub`=2
LEFT JOIN img ON img.`id`=u.`userid`
LEFT JOIN `cqj_parents_student` ps ON p.`parentsid`=ps.`parentsid`
LEFT JOIN `cqj_student` s ON ps.`studentid`=s.`studentid`
LEFT JOIN `clazzstudent` cls ON  cls.`status`=0 AND cls.`sid`=s.`studentid` 
LEFT JOIN `clazz` cla ON cls.`cid`=cla.`id`
ORDER BY stuinfo
	</select>
	<select id="queryStduents" resultMap="BaseResultMap">
		SELECT cu.`userid`,cs.`studentname` `name`,clz.`id` clazzids,clz.`cname` standby1,img.`url`,1 as `usertypenub` FROM 
		`cqj_student`cs 
		LEFT JOIN `clazzstudent` cls
		ON cls.`sid`=cs.`studentid` AND cls.`status`=0
		LEFT JOIN `clazz` clz
		ON clz.`id`=cls.`cid`
		LEFT JOIN `cqj_user` cu
		ON cu.`usertypeid`=cs.`studentid` 
		LEFT JOIN img 
		ON img.`id`=cu.`userid`
		WHERE cu.`userid` IS NOT NULL AND cu.`status`=0
	</select>
	<!-- 为学生批量添加user登录账号 -->
	<insert id="insertAll" useGeneratedKeys="true" keyProperty="userid" >
		INSERT INTO cqj_user VALUES
	    <foreach collection="list" item="s" separator=",">
	    	(0,#{s.username},'123',1,#{s.usertypeid},1,DATE(now()),null,0,#{s.uid},null,null,null,null,null,null)
	    </foreach>
	</insert>
</mapper>