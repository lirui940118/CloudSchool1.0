<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.CloudSchool.dao.LrKnowledagepointTeacherMapper">
  <resultMap id="BaseResultMap" type="com.CloudSchool.domain.LrKnowledagepointTeacher">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="sId" jdbcType="INTEGER" property="sid" />
    <result column="kId" jdbcType="INTEGER" property="kid" />
    <result column="staffId" jdbcType="INTEGER" property="staffid" />
    <result column="createTime" jdbcType="TIMESTAMP" property="createtime" />
    <result column="uId" jdbcType="INTEGER" property="uid" />
    <result column="status" jdbcType="INTEGER" property="status" />
  </resultMap>
  <sql id="Base_Column_List">
    id, sId, kId, staffId, createTime, uId, status
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from lr_knowledagepoint_teacher
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from lr_knowledagepoint_teacher
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.CloudSchool.domain.LrKnowledagepointTeacher">
    insert into lr_knowledagepoint_teacher (id, sId, kId, 
      staffId, createTime, uId, 
      status)
    values (#{id,jdbcType=INTEGER}, #{sid,jdbcType=INTEGER}, #{kid,jdbcType=INTEGER}, 
      #{staffid,jdbcType=INTEGER},Now(), #{uid,jdbcType=INTEGER}, 
      #{status,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.CloudSchool.domain.LrKnowledagepointTeacher">
    insert into lr_knowledagepoint_teacher
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="sid != null">
        sId,
      </if>
      <if test="kid != null">
        kId,
      </if>
      <if test="staffid != null">
        staffId,
      </if>
      <if test="createtime != null">
        createTime,
      </if>
      <if test="uid != null">
        uId,
      </if>
      <if test="status != null">
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="sid != null">
        #{sid,jdbcType=INTEGER},
      </if>
      <if test="kid != null">
        #{kid,jdbcType=INTEGER},
      </if>
      <if test="staffid != null">
        #{staffid,jdbcType=INTEGER},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="uid != null">
        #{uid,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.CloudSchool.domain.LrKnowledagepointTeacher">
    update lr_knowledagepoint_teacher
    <set>
      <if test="sid != null">
        sId = #{sid,jdbcType=INTEGER},
      </if>
      <if test="kid != null">
        kId = #{kid,jdbcType=INTEGER},
      </if>
      <if test="staffid != null">
        staffId = #{staffid,jdbcType=INTEGER},
      </if>
      <if test="createtime != null">
        createTime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="uid != null">
        uId = #{uid,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.CloudSchool.domain.LrKnowledagepointTeacher">
    update lr_knowledagepoint_teacher
    set sId = #{sid,jdbcType=INTEGER},
      kId = #{kid,jdbcType=INTEGER},
      staffId = #{staffid,jdbcType=INTEGER},
      createTime = #{createtime,jdbcType=TIMESTAMP},
      uId = #{uid,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <!-- 查询该教员知识点的上报情况 -->
  <select id="queryAllKnowledagepointByStaffId" resultType="com.CloudSchool.domain.statistics.KnowledgePointUpVO">
  SELECT zzy_course.`cid`AS courseId,zzy_course.`course_name`AS courseName,
	zzy_section.`secid`AS sectionId,zzy_section.`section_name`AS sectionName,
	lr_knowledagepoint.`id`AS knowledagepointId,lr_knowledagepoint.`kName`AS knowledagepointName,
	COUNT(lr_knowledagepoint.`id`)AS `count`
	FROM `lr_knowledagepoint_teacher`
	INNER JOIN `lr_knowledagepoint` ON `lr_knowledagepoint`.`id` = `lr_knowledagepoint_teacher`.`kId`
	INNER JOIN `zzy_section` ON `zzy_section`.`secid` = lr_knowledagepoint.`sId`#章节
	INNER JOIN zzy_course ON zzy_course.`cid` = zzy_section.`cid` #课程
	WHERE lr_knowledagepoint_teacher.`staffId` = #{staffId}#员工id 教员id
	GROUP BY lr_knowledagepoint.`id`
	ORDER BY `count` DESC
  </select>
</mapper>